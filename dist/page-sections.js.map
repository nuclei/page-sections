{"version":3,"file":"page-sections.js","sources":["../node_modules/make-template/dist/makeTemplate.js","../src/page-section-container.ts","../src/page-section.ts","../src/page-sections.ts"],"sourcesContent":["const makeTemplate = function (strings) {\n    let html = strings[strings.length - 1];\n    let template = document.createElement('template');\n    template.innerHTML = html;\n    return template;\n};\n\nexport { makeTemplate };\n//# sourceMappingURL=makeTemplate.js.map\n","/* global HTMLElement CustomEvent */\n'use strict'\n\nimport { makeTemplate } from '../node_modules/make-template/dist/makeTemplate.js'\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\n\nlet template = makeTemplate`<style>\n    :host{\n        display: inline-block;\n        flex: 0 1 auto;\n        box-sizing: border-box;\n        width: 100%;\n        height: auto;\n        min-height: 100vh;\n        align-self: center;\n    }\n  </style>\n  <slot></slot>\n`\n\nexport class PageSectionContainer extends HTMLElement { // eslint-disable-line no-unused-vars\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    // create shadowRoot\n    let shadowRoot = this.attachShadow({mode: 'open'})\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'page-section-container') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n\n  /**\n  * @method connectedCallback\n  * @description When element is added to DOM\n   */\n  connectedCallback () {\n    let element = this\n    var fn\n    // setup scroll event to check for active elements\n    window.addEventListener('scroll', function () {\n      clearTimeout(fn)\n      fn = setTimeout(function () {\n        element.setActiveState()\n      }, 10)\n    })\n    // initialize activated state\n    setTimeout(function () {\n      element.setActiveState()\n    }, 1)\n  }\n  /**\n   * @method _inView\n   * @description check if element is in view\n   */\n  get _inView () {\n    return this.getBoundingClientRect().bottom > 0 && this.getBoundingClientRect().top < window.innerHeight\n  }\n  /**\n   * @method setActiveState\n   * @description set _active property & add/remove active attr\n   */\n  public setActiveState () {\n    if (this._inView) {\n      this._setActive()\n      // Get all child elements and activate visible ones\n      // stop once an inactive item follows an active item\n      Array.prototype.slice.call(this.querySelectorAll('page-section')).map(function (item, index, array) {\n        item.parent = item\n        item.setActiveState()\n        // abort if current element is NOT in view, but previous was in view\n        // if (index > 0 && !item.hasAttribute('active') && array[index - 1].hasAttribute('active')) {\n        //   return\n        // }\n      })\n    } else {\n      this._setUnactive()\n    }\n  }\n  /**\n   * _setActive\n   */\n  private _setActive () {\n    if (this.hasAttribute('active')) return\n    // set attribute\n    this.setAttribute('active', '')\n    // Dispatch the event.\n    this.dispatchEvent(new CustomEvent('activated'))\n  }\n  /**\n   * _setUnactive\n   */\n  private _setUnactive () {\n    // set 'wasActivated' attribute, if element was active\n    if (this.hasAttribute('active') && !this.hasAttribute('activated')) {\n      this.setAttribute('activated', '')\n    }\n    // remove 'active' attribute\n    this.removeAttribute('active')\n    // Dispatch the event.\n    this.dispatchEvent(new CustomEvent('deactivated'))\n  }\n}\n","/* global HTMLElement CustomEvent*/\n'use strict'\n\nimport { makeTemplate } from '../node_modules/make-template/dist/makeTemplate.js'\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\n\nlet template = makeTemplate`<style>\n    :host{\n      display: flex;\n      flex-direction: column;\n      flex: 0 1 auto;\n      box-sizing: border-box;\n      width: 100%;\n      height: auto;\n      align-self: center;\n    }\n    :host([fullscreen]){\n      min-height: 100vh;\n    }\n    :host([centered]){\n      align-items: stretch;\n      flex-direction: row;\n      justify-content: center;\n    }\n    :host([centered]) > #content{\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      flex: 1 1 auto;\n    }\n  </style>\n  <div id=\"content\">\n    <slot></slot>\n  </div>\n`\n\nexport class PageSection extends HTMLElement { // eslint-disable-line no-unused-vars\n  private _fullscreen: boolean = false // eslint-disable-line no-undef\n  private _maxwidth: string = null // eslint-disable-line no-undef\n\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    // create shadowRoot\n    let shadowRoot = this.attachShadow({mode: 'open'})\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'page-section') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  static get observedAttributes () {\n    return ['src', 'fullscreen', 'maxwidth']\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  attributeChangedCallback (attrName: string, oldVal, newVal) {\n    this[attrName] = newVal\n  }\n  /**\n   * @method _inView\n   * @description check if element is in view\n   */\n  get _inView () {\n    // minimum visible percent of the element to be considered active\n    var minVisible = Math.min(1, (parseFloat(this.getAttribute('requiredVisible')) || parseFloat((this as any).parent.getAttribute('requiredVisible')) || 0.6)) // eslint-disable-line no-undef\n    // px value of element that can be hidden\n    var requiredVisiblePx = minVisible * Math.min(this.getBoundingClientRect().height, window.innerHeight)\n    // calculate visible height\n    var visibleHeight = this.getBoundingClientRect().height\n    // substract part that is outside screen to top\n    visibleHeight += Math.min(0, this.getBoundingClientRect().top)\n    // substract part that is outside screen to bottom\n    visibleHeight -= Math.max(0, (this.getBoundingClientRect().bottom - window.innerHeight))\n    // return if element is visible or not\n    return visibleHeight >= requiredVisiblePx\n  }\n  /**\n   * @method setActiveState\n   * @description set active if in viewport or unactive if not\n   */\n  public setActiveState () {\n    if (this._inView) {\n      this._setActive()\n    } else {\n      this._setUnactive()\n    }\n  }\n  /**\n   * _setActive\n   */\n  private _setActive () {\n    if (this.hasAttribute('active')) return\n    // set attribute\n    this.setAttribute('active', '')\n    // Dispatch the event.\n    this.dispatchEvent(new CustomEvent('activated'))\n  }\n  /**\n   * _setUnactive\n   */\n  private _setUnactive () {\n    // set 'activated' attribute, if element was active\n    if (this.hasAttribute('active') && !this.hasAttribute('activated')) {\n      this.setAttribute('activated', '')\n    }\n    // remove 'active' attribute\n    this.removeAttribute('active')\n    // Dispatch the event.\n    this.dispatchEvent(new CustomEvent('deactivated'))\n  }\n  /**\n  * @method setter fullscreen\n  * @description set the fullscreen property\n   */\n  set fullscreen (fullscreen: boolean) {\n    if (this._fullscreen === this._isTruthy(fullscreen)) return\n    this._fullscreen = this._isTruthy(fullscreen)\n\n    if (this._fullscreen) {\n      this.setAttribute('fullscreen', '')\n    } else {\n      this.removeAttribute('fullscreen')\n    }\n  }\n  /**\n   * @method getter fullscreen\n   * @description get the fullscreen property\n   */\n  get fullscreen () {\n    return this._fullscreen\n  }\n  /**\n  * @method setter maxwidth\n  * @description set the maxwidth property\n   */\n  set maxwidth (maxwidth: string) {\n    if (this._maxwidth === maxwidth) return\n    this._maxwidth = maxwidth\n\n    let contentElement = this.shadowRoot.querySelector('#content') as HTMLElement\n\n    if (this._maxwidth !== null && this._maxwidth !== 'none') {\n      contentElement.style.maxWidth = maxwidth\n      this.setAttribute('maxWidth', maxwidth)\n    } else {\n      contentElement.style.maxWidth = 'auto'\n      this.removeAttribute('maxWidth')\n    }\n  }\n  /**\n   * @method getter maxwidth\n   * @description get the maxwidth property\n   */\n  get maxwidth () {\n    return this._maxwidth\n  }\n  /**\n   * @method _isTruthy\n   * @description returns true if value is truthy or empty\n   */\n  private _isTruthy (value) {\n    if (value === true || value === 'true' || value === '') {\n      return true\n    }\n    return false\n  }\n}\n","'use strict'\n\nimport { PageSectionContainer } from './page-section-container'\nimport { PageSection } from './page-section'\n\nwindow.customElements.define('page-sections', PageSectionContainer)\nwindow.customElements.define('page-section', PageSection)\n"],"names":["template"],"mappings":"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"}