{"version":3,"sources":["page-section.js"],"names":["makeTemplate","strings","html","substs","i","length","template","document","createElement","innerHTML","PageSectionItem","_active","shadowRoot","attachShadow","mode","ShadyCSS","applyStyle","appendChild","importNode","content","setActive","state","setAttribute","removeAttribute","_setActiveState","_inView","active","dispatchEvent","Event","box","getBoundingClientRect","top","window","innerHeight","bottom","height","prepareTemplate","customElements","define"],"mappings":"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","file":"page-section.js","sourcesContent":["/* global HTMLElement Event */\n// import { makeTemplate } from './make-template.js'\n(function () {\n  const makeTemplate = function (strings, ...substs) {\n    var html = ''\n    for (let i = 0; i < substs.length; i++) {\n      html += strings[i]\n      html += substs[i]\n    }\n    html += strings[strings.length - 1]\n    var template = document.createElement('template')\n    template.innerHTML = html\n    return template\n  }\n\n  class PageSectionItem extends HTMLElement {\n    constructor () {\n            // If you define a ctor, always call super() first!\n            // This is specific to CE and required by the spec.\n      super()\n            // by default _active is false\n      this._active = false\n            // Attach a shadow root to the element.\n      const shadowRoot = this.attachShadow({mode: 'open'})\n            // add content to shadowRoot & apply css polyfill\n      ShadyCSS.applyStyle(this) // eslint-disable-line no-undef\n      shadowRoot.appendChild(document.importNode(template.content, true))\n    }\n        /**\n         * get active state of individual section\n         * @method active\n         * @return {Boolean}\n         */\n    get active () {\n      return this._active\n    }\n        /**\n         * check if element is in view\n         */\n    get _inView () {\n            // get elements bounding box\n      var box = this.getBoundingClientRect()\n      // check if element is in view\n      if ((box.top >= 0 && (\n                    box.top < window.innerHeight * 0.5 ||\n                    box.bottom <= window.innerHeight))\n          ||\n            (box.top < window.innerHeight * 0.5 && box.bottom > window.innerHeight * 0.5)\n          ||\n            box.top < window.innerHeight - box.height/1.25\n            ) {\n        return true\n      }\n    }\n        /**\n         * When element is added to DOM\n         */\n    connectedCallback () {\n            // initialize activated state\n      this.setActive()\n    }\n        /**\n         * set _active property & add/remove active attr\n         */\n    _setActiveState (state) {\n      if (this._active === state) {\n        return\n      }\n            // set _active property\n      this._active = (state === true)\n            // add or remove active attribute\n      if (this._active) {\n        this.setAttribute('active', '')\n        return\n      } else {\n        this.removeAttribute('active')\n      }\n    }\n        /**\n         * set active if in viewport or unactive if not\n         */\n    setActive () {\n      this._setActiveState(this._inView)\n\n      if (this._inView) {\n        if (this.active === false) {\n                    // set attributes\n          this.setAttribute('active', '')\n          this._active = true\n                    // Dispatch the event.\n          this.dispatchEvent(new Event('activated'))\n        }\n                // return true\n        return true\n      }\n            // set element to unactive\n      if (this.active === true) {\n                // set attributes\n        this.removeAttribute('active')\n        this._active = false\n                // Dispatch the event.\n        this.dispatchEvent(new Event('deactivated'))\n      }\n    }\n    }\n\n  const template = makeTemplate`<style>\n            :host{\n                display: inline-block;\n                flex: 0 1 auto;\n            }\n            :host(:not([flexible])){\n                box-sizing: border-box;\n                width: 100%;\n                min-height: 100vh;\n            }\n            :host([flexible]){\n                margin-left: 50%;\n                transform: translateX(-50%);\n            }\n        </style>\n        <slot></slot>\n  `\n\n  ShadyCSS.prepareTemplate(template, 'page-section') // eslint-disable-line no-undef\n  window.customElements.define('page-section', PageSectionItem)\n})()\n"]}